{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport packagesEng from '../../api/packagesEng.json';\nimport packagesRus from '../../api/packagesRus.json';\nimport packagesUkr from '../../api/packagesUkr.json';\nimport packagesGer from '../../api/packagesGer.json';\nimport './Packages.scss';\nimport { useTranslation } from 'react-i18next';\nexport const Packages = _ref => {\n  let {\n    getStarted,\n    packagesRef\n  } = _ref;\n} // const { t } = useTranslation();\n\n// const arr = useTranslation();\n\n// let packages;\n\n// if (arr.i18n.language == 'Eng') {\n//   packages = packagesEng;\n// } else if (arr.i18n.language == 'Rus') {\n//   packages = packagesRus;\n// } else if (arr.i18n.language == 'Ukr') {\n//   packages = packagesUkr;\n// } else if (arr.i18n.language == 'Ger') {\n//   packages = packagesGer;\n// }\n\n// return (\n//   <section className=\"Packages\" ref={packagesRef}>\n//     <h2 className=\"Packages__title\">{t('Packages.text1')}</h2>\n//     <ul className=\"Packages__packages\">\n//       {packages.map(pack => (\n//         <li key={pack.name} className=\"Packages__package\">\n//           <div className={`Packages__package-top Packages__package-top--${pack.name}`}>\n//             <h4 className=\"Packages__package-name\">{pack.title}</h4>\n//             <p className=\"Packages__package-whom\">{pack.whom}</p>\n//           </div>\n//           <h3 className=\"Packages__includes\">{t('Packages.text2')}</h3>\n//           <ul className=\"Packages__options\">\n//             {pack.includes.map(option => (\n//               <li\n//                 key={option}\n//                 className=\"Packages__option\"\n//               >\n//                 {option}\n//               </li>\n//             ))}\n//           </ul>\n//           <button\n//             className=\"Packages__btn\"\n//             type=\"button\"\n//             onClick={() => getStarted()}\n//           >\n//             {t('H.Getstarted')}\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   </section>\n// );\n;\n_c = Packages;\nPackages.propTypes = {\n  getStarted: PropTypes.func.isRequired,\n  packagesRef: PropTypes.oneOfType([PropTypes.func,\n  // for legacy refs\n  PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Packages\");","map":{"version":3,"names":["React","PropTypes","packagesEng","packagesRus","packagesUkr","packagesGer","useTranslation","Packages","getStarted","packagesRef","propTypes","func","isRequired","oneOfType","shape","current","instanceOf","Element"],"sources":["D:/REACT/mapStars/frontend/src/components/Packages/Packages.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport packagesEng from '../../api/packagesEng.json';\r\nimport packagesRus from '../../api/packagesRus.json';\r\nimport packagesUkr from '../../api/packagesUkr.json';\r\nimport packagesGer from '../../api/packagesGer.json';\r\nimport './Packages.scss';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const Packages = ({ getStarted, packagesRef }) => {\r\n\r\n  // const { t } = useTranslation();\r\n\r\n  // const arr = useTranslation();\r\n\r\n  // let packages;\r\n  \r\n  // if (arr.i18n.language == 'Eng') {\r\n  //   packages = packagesEng;\r\n  // } else if (arr.i18n.language == 'Rus') {\r\n  //   packages = packagesRus;\r\n  // } else if (arr.i18n.language == 'Ukr') {\r\n  //   packages = packagesUkr;\r\n  // } else if (arr.i18n.language == 'Ger') {\r\n  //   packages = packagesGer;\r\n  // }\r\n\r\n  // return (\r\n  //   <section className=\"Packages\" ref={packagesRef}>\r\n  //     <h2 className=\"Packages__title\">{t('Packages.text1')}</h2>\r\n  //     <ul className=\"Packages__packages\">\r\n  //       {packages.map(pack => (\r\n  //         <li key={pack.name} className=\"Packages__package\">\r\n  //           <div className={`Packages__package-top Packages__package-top--${pack.name}`}>\r\n  //             <h4 className=\"Packages__package-name\">{pack.title}</h4>\r\n  //             <p className=\"Packages__package-whom\">{pack.whom}</p>\r\n  //           </div>\r\n  //           <h3 className=\"Packages__includes\">{t('Packages.text2')}</h3>\r\n  //           <ul className=\"Packages__options\">\r\n  //             {pack.includes.map(option => (\r\n  //               <li\r\n  //                 key={option}\r\n  //                 className=\"Packages__option\"\r\n  //               >\r\n  //                 {option}\r\n  //               </li>\r\n  //             ))}\r\n  //           </ul>\r\n  //           <button\r\n  //             className=\"Packages__btn\"\r\n  //             type=\"button\"\r\n  //             onClick={() => getStarted()}\r\n  //           >\r\n  //             {t('H.Getstarted')}\r\n  //           </button>\r\n  //         </li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   </section>\r\n  // );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nPackages.propTypes = {\r\n  getStarted: PropTypes.func.isRequired,\r\n  packagesRef: PropTypes.oneOfType([\r\n    PropTypes.func, // for legacy refs\r\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\r\n  ]).isRequired,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAO,iBAAiB;AACxB,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAO,MAAMC,QAAQ,GAAG,QAAiC;EAAA,IAAhC;IAAEC,UAAU;IAAEC;EAAY,CAAC;AAmDpD,CAAC,CAjDC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAAA,KAnDYF,QAAQ;AA4DrBA,QAAQ,CAACG,SAAS,GAAG;EACnBF,UAAU,EAAEP,SAAS,CAACU,IAAI,CAACC,UAAU;EACrCH,WAAW,EAAER,SAAS,CAACY,SAAS,CAAC,CAC/BZ,SAAS,CAACU,IAAI;EAAE;EAChBV,SAAS,CAACa,KAAK,CAAC;IAAEC,OAAO,EAAEd,SAAS,CAACe,UAAU,CAACC,OAAO;EAAE,CAAC,CAAC,CAC5D,CAAC,CAACL;AACL,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}