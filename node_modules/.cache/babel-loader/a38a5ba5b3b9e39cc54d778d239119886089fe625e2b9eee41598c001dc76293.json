{"ast":null,"code":"import _slicedToArray from\"D:/REACT/mapStars/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var LangContext=/*#__PURE__*/React.createContext();export var LangProvider=function LangProvider(_ref){var children=_ref.children;var _useState=useState('Eng'),_useState2=_slicedToArray(_useState,2),lang=_useState2[0],setLang=_useState2[1];var getLocalStorage=function getLocalStorage(){if(localStorage.getItem('lang')!==null){setLang(JSON.parse(localStorage.getItem('lang')||''));}};var updateStorage=function updateStorage(){if(lang!=='Eng'){localStorage.setItem('lang',JSON.stringify(lang));}else{localStorage.removeItem('lang');}};var changeLanguage=function changeLanguage(language){setLang(language);};var contextValue={lang:lang,changeLanguage:changeLanguage};useEffect(function(){getLocalStorage();},[]);useEffect(function(){updateStorage();},[lang]);return/*#__PURE__*/_jsx(LangContext.Provider,{value:contextValue,children:children});};","map":{"version":3,"names":["React","useState","useEffect","LangContext","createContext","LangProvider","children","lang","setLang","getLocalStorage","localStorage","getItem","JSON","parse","updateStorage","setItem","stringify","removeItem","changeLanguage","language","contextValue"],"sources":["D:/REACT/mapStars/frontend/src/context/LangProvider.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const LangContext = React.createContext();\r\n\r\nexport const LangProvider = ({ children }) => {\r\n  const [lang, setLang] = useState('Eng');\r\n\r\n  const getLocalStorage = () => {\r\n    if (localStorage.getItem('lang') !== null) {\r\n      setLang(JSON.parse(localStorage.getItem('lang') || ''));\r\n    }\r\n  };\r\n\r\n  const updateStorage = () => {\r\n    if (lang !== 'Eng') {\r\n      localStorage.setItem('lang', JSON.stringify(lang));\r\n    } else {\r\n      localStorage.removeItem('lang');\r\n    }\r\n  };\r\n\r\n  const changeLanguage = (language) => {\r\n    setLang(language);\r\n  };\r\n\r\n  const contextValue = {\r\n    lang,\r\n    changeLanguage,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLocalStorage();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateStorage();\r\n  }, [lang]);\r\n\r\n  return (\r\n    <LangContext.Provider value={contextValue}>\r\n      {children}\r\n    </LangContext.Provider>\r\n  );\r\n};\r\n\r\nLangProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n"],"mappings":"gHAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,2CAGnD,MAAO,IAAMC,YAAW,cAAGH,KAAK,CAACI,aAAa,EAAE,CAEhD,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,MAAqB,IAAfC,SAAQ,MAARA,QAAQ,CACrC,cAAwBL,QAAQ,CAAC,KAAK,CAAC,wCAAhCM,IAAI,eAAEC,OAAO,eAEpB,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,EAAS,CAC5B,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAK,IAAI,CAAE,CACzCH,OAAO,CAACI,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAI,EAAE,CAAC,CAAC,CACzD,CACF,CAAC,CAED,GAAMG,cAAa,CAAG,QAAhBA,cAAa,EAAS,CAC1B,GAAIP,IAAI,GAAK,KAAK,CAAE,CAClBG,YAAY,CAACK,OAAO,CAAC,MAAM,CAAEH,IAAI,CAACI,SAAS,CAACT,IAAI,CAAC,CAAC,CACpD,CAAC,IAAM,CACLG,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC,CACjC,CACF,CAAC,CAED,GAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,QAAQ,CAAK,CACnCX,OAAO,CAACW,QAAQ,CAAC,CACnB,CAAC,CAED,GAAMC,aAAY,CAAG,CACnBb,IAAI,CAAJA,IAAI,CACJW,cAAc,CAAdA,cACF,CAAC,CAEDhB,SAAS,CAAC,UAAM,CACdO,eAAe,EAAE,CACnB,CAAC,CAAE,EAAE,CAAC,CAENP,SAAS,CAAC,UAAM,CACdY,aAAa,EAAE,CACjB,CAAC,CAAE,CAACP,IAAI,CAAC,CAAC,CAEV,mBACE,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAEa,YAAa,UACvCd,QAAQ,EACY,CAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}