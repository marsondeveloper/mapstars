{"ast":null,"code":"import i18n from'i18next';import{initReactI18next}from'react-i18next';import Backend from'i18next-http-backend';import LanguageDetector from'i18next-browser-languagedetector';// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nvar languages=['Rus','Ukr','Eng','Ger'];i18n// load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n// want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n.use(Backend)// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)// pass the i18n instance to react-i18next.\n.use(initReactI18next)// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({fallbackLng:'Eng',debug:true,whitelist:languages,interpolation:{escapeValue:false// not needed for react as it escapes by default\n}});export default i18n;","map":{"version":3,"names":["i18n","initReactI18next","Backend","LanguageDetector","languages","use","init","fallbackLng","debug","whitelist","interpolation","escapeValue"],"sources":["D:/REACT/mapStars/frontend/src/i18next.js"],"sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst languages = ['Rus', 'Ukr', 'Eng', 'Ger'];\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'Eng',\r\n    debug: true,\r\n    whitelist: languages,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;"],"mappings":"AAAA,MAAOA,KAAI,KAAM,SAAS,CAC1B,OAASC,gBAAgB,KAAQ,eAAe,CAChD,MAAOC,QAAO,KAAM,sBAAsB,CAC1C,MAAOC,iBAAgB,KAAM,kCAAkC,CAC/D;AACA;AACA;AAEA,GAAMC,UAAS,CAAG,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CAE9CJ,IACE;AACA;AACA;AAAA,CACCK,GAAG,CAACH,OAAO,CACZ;AACA;AAAA,CACCG,GAAG,CAACF,gBAAgB,CACrB;AAAA,CACCE,GAAG,CAACJ,gBAAgB,CACrB;AACA;AAAA,CACCK,IAAI,CAAC,CACJC,WAAW,CAAE,KAAK,CAClBC,KAAK,CAAE,IAAI,CACXC,SAAS,CAAEL,SAAS,CAEpBM,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AACtB,CACF,CAAC,CAAC,CAGJ,cAAeX,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}